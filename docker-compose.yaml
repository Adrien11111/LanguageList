name: 'go-api'

services:
  database:
    build:
      context: .
      dockerfile: ./build-docker/database/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}-database
    container_name: ${COMPOSE_PROJECT_NAME}-database
    restart: always
    volumes:
      - type: volume
        source: database
        target: /var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${BD_ROOT_PASSWORD}
      - MYSQL_DATABASE=${BD_NAME}
      - MYSQL_USER=${BD_USER}
      - MYSQL_PASSWORD=${BD_PASSWORD}
    networks:
      - go-api-network
  golang:
    build:
      context: .
      dockerfile: ./build-docker/go/Dockerfile
    image: ${COMPOSE_PROJECT_NAME}-golang
    container_name: ${COMPOSE_PROJECT_NAME}-golang
    restart: always
    command: sh -c "go mod tidy && gow run src/main.go"
    volumes:
      - type: bind
        source: .
        target: /app/
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=database
      - DB_PORT=3306
      - DB_USER=${BD_USER}
      - DB_PASSWORD=${BD_PASSWORD}
      - DB_NAME=${BD_NAME}
    depends_on:
      - database
    networks:
      - go-api-network
  phpmyadmin:
    image: phpmyadmin
    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      - PMA_HOST=database
      - PMA_USER=${BD_USER}
      - PMA_PASSWORD=${BD_PASSWORD}
    depends_on:
      - database
    networks:
      - go-api-network

volumes:
  database:
    name: ${COMPOSE_PROJECT_NAME}-database
networks:
  go-api-network:
    name: ${COMPOSE_PROJECT_NAME}-network
    driver: bridge
    